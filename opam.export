opam-version: "2.0"
compiler: [
  "base-bigarray.base"
  "base-domains.base"
  "base-nnp.base"
  "base-threads.base"
  "base-unix.base"
  "host-arch-x86_64.1"
  "host-system-other.1"
  "ocaml.5.2.0"
  "ocaml-base-compiler.5.2.0"
  "ocaml-config.3"
  "ocaml-options-vanilla.1"
]
roots: [
  "ocaml-base-compiler.5.2.0"
  "ounit.2.2.7"
  "ppx_deriving.6.0.2"
  "ppx_import.1.11.0"
  "ppx_mina_introspector.dev"
  "ppx_sexp_conv.v0.17.0"
  "ppx_yojson_conv.v0.17.0"
  "ppxlib-bench.dev"
]
installed: [
  "base.v0.17.1"
  "base-bigarray.base"
  "base-domains.base"
  "base-nnp.base"
  "base-threads.base"
  "base-unix.base"
  "cppo.1.6.9"
  "csexp.1.5.2"
  "dune.3.16.0"
  "dune-configurator.3.16.0"
  "host-arch-x86_64.1"
  "host-system-other.1"
  "ocaml.5.2.0"
  "ocaml-base-compiler.5.2.0"
  "ocaml-compiler-libs.v0.17.0"
  "ocaml-config.3"
  "ocaml-options-vanilla.1"
  "ocaml_intrinsics_kernel.v0.17.0"
  "ocamlfind.1.9.6"
  "octavius.1.2.2"
  "ounit.2.2.7"
  "ounit2.2.2.7"
  "ppx_derivers.1.2.1"
  "ppx_deriving.6.0.2"
  "ppx_import.1.11.0"
  "ppx_js_style.v0.17.0"
  "ppx_mina_introspector.dev"
  "ppx_sexp_conv.v0.17.0"
  "ppx_yojson_conv.v0.17.0"
  "ppx_yojson_conv_lib.v0.17.0"
  "ppxlib.0.33.0"
  "ppxlib-bench.dev"
  "ppxlib_jane.v0.17.0"
  "seq.base"
  "sexplib0.v0.17.0"
  "stdlib-shims.0.3.0"
  "yojson.2.2.2"
]
pinned: [
  "ppx_import.1.11.0"
  "ppx_mina_introspector.dev"
  "ppxlib.0.33.0"
  "ppxlib-bench.dev"
]
package "ppx_import" {
  opam-version: "2.0"
  version: "1.11.0"
  synopsis:
    "A syntax extension for importing declarations from interface files"
  maintainer: "whitequark <whitequark@whitequark.org>"
  authors: "whitequark <whitequark@whitequark.org>"
  license: "MIT"
  tags: "syntax"
  homepage: "https://github.com/ocaml-ppx/ppx_import"
  doc: "https://ocaml-ppx.github.io/ppx_import/"
  bug-reports: "https://github.com/ocaml-ppx/ppx_import/issues"
  depends: [
    "ocaml" {>= "4.05.0" & < "4.10.0"} |
    ("ocaml" {>= "4.10.0"} & "ppx_sexp_conv" {with-test & >= "v0.13.0"})
    "dune" {>= "3.0.0"}
    "ppxlib" {>= "0.26.0"}
    "ounit" {with-test}
    "ppx_deriving" {with-test & >= "4.2.1"}
    "sexplib0" {with-test & >= "v0.15.0"}
  ]
  build: [
    ["dune" "build" "-p" name "-j" jobs]
    ["dune" "runtest" "-p" name "-j" jobs] {with-test}
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ppx_import.git"
  url {
    src: "git+file:///mnt/data1/nix/time/2024/08/06/ppx_import#master"
  }
}
package "ppx_mina_introspector" {
  opam-version: "2.0"
  version: "dev"
  synopsis: "PPX Introspector for targeting mina"
  description: "Dumping out asts in json"
  maintainer: "James Michael DuPont"
  authors: "James Michael DuPont"
  license: "AGPL-3.0"
  tags: ["topics" "introspection" "ast" "json" "reflection" "compiler"]
  homepage:
    "https://github.com/meta-introspector/ocaml-libppx-import-yojson-introspector"
  doc:
    "https://github.com/meta-introspector/ocaml-libppx-import-yojson-introspector"
  bug-reports:
    "https://github.com/meta-introspector/ocaml-libppx-import-yojson-introspector/issues"
  depends: [
    "ocaml"
    "dune" {>= "3.3"}
    "ppx_import"
    "ppx_yojson_conv"
    "base"
    "ppx_sexp_conv"
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo:
    "git+https://github.com/meta-introspector/ocaml-libppx-import-yojson-introspector.git"
  url {
    src: "git+file:///mnt/data1/nix/time/2024/08/15/introspector_test#main"
  }
}
package "ppxlib" {
  opam-version: "2.0"
  version: "0.33.0"
  synopsis: "Standard infrastructure for ppx rewriters"
  description: """\
Ppxlib is the standard infrastructure for ppx rewriters
and other programs that manipulate the in-memory representation of
OCaml programs, a.k.a the "Parsetree".

It also comes bundled with two ppx rewriters that are commonly used to
write tools that manipulate and/or generate Parsetree values;
`ppxlib.metaquot` which allows to construct Parsetree values using the
OCaml syntax directly and `ppxlib.traverse` which provides various
ways of automatically traversing values of a given type, in particular
allowing to inject a complex structured value into generated code."""
  maintainer: "opensource@janestreet.com"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml-ppx/ppxlib"
  doc: "https://ocaml-ppx.github.io/ppxlib/"
  bug-reports: "https://github.com/ocaml-ppx/ppxlib/issues"
  depends: [
    "dune" {>= "2.7"}
    "ocaml" {>= "4.04.1" & < "5.4.0"}
    "ocaml-compiler-libs" {>= "v0.11.0"}
    "ppx_derivers" {>= "1.0"}
    "sexplib0" {>= "v0.12"}
    "sexplib0" {with-test & >= "v0.15"}
    "stdlib-shims"
    "ocamlfind" {with-test}
    "re" {with-test & >= "1.9.0"}
    "cinaps" {with-test & >= "v0.12.1"}
    "odoc" {with-doc}
  ]
  conflicts: [
    "ocaml-migrate-parsetree" {< "2.0.0"}
    "ocaml-base-compiler" {= "5.1.0~alpha1"}
    "ocaml-variants" {= "5.1.0~alpha1+options"}
    "base-effects"
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ppxlib.git"
  url {
    src: "git+file:///mnt/data1/nix/time/2023/12/28/ppxlib#HEAD"
  }
}
package "ppxlib-bench" {
  opam-version: "2.0"
  version: "dev"
  synopsis: "Run ppxlib benchmarks"
  description: """\
Third-party code in benchmarks depends on later versions of the ocaml
than ppxlib itself. Also the benchmark runner has dependencies that ppxlib doesn't
have."""
  maintainer: "opensource@janestreet.com"
  authors: "Jane Street Group, LLC <opensource@janestreet.com>"
  license: "MIT"
  homepage: "https://github.com/ocaml-ppx/ppxlib"
  doc: "https://ocaml-ppx.github.io/ppxlib/"
  bug-reports: "https://github.com/ocaml-ppx/ppxlib/issues"
  depends: [
    "dune" {>= "2.7"}
    "ocaml" {>= "4.04.1"}
    "ppxlib"
    "base"
    "yojson"
    "odoc" {with-doc}
  ]
  build: [
    ["dune" "subst"] {dev}
    [
      "dune"
      "build"
      "-p"
      name
      "-j"
      jobs
      "@install"
      "@runtest" {with-test}
      "@doc" {with-doc}
    ]
  ]
  dev-repo: "git+https://github.com/ocaml-ppx/ppxlib.git"
  url {
    src: "git+file:///mnt/data1/nix/time/2023/12/28/ppxlib#HEAD"
  }
}
